@page "/admin/products/details/{id:long}"

<h3 class="bg-info text-white text-center p-1">Details</h3>
<table class="table table-sm table-bordered table-striped">
    <tbody>
        <tr><th>ID</th><td>@Product?.Id</td></tr>
        <tr><th>Название</th><td>@Product?.Name</td></tr>
        <tr><th>Описание</th><td>@Product?.Description</td></tr>
        <tr><th>Модель устройства</th><td>@Product?.DeviceModel?.Name</td></tr>
        <tr><th>Категория</th><td>@Product?.DeviceModel?.Category?.Name</td></tr>
        <tr><th>Состояние</th><td>@GetIsUsedInfo(Product)</td></tr>
        <tr><th>Цена</th><td>@Product?.Price.ToString("C")</td></tr>
        <tr><th>Путь к картинке</th><td>@Product?.ImagePath</td></tr>
    </tbody>
</table>
<NavLink class="btn btn-warning" href="@EditUrl">Изменить</NavLink>
<NavLink class="btn btn-secondary" href="/admin/products">Назад</NavLink>

@code {

    [Inject]
    public IChinilkaRepository? Repository { get; set; }
    [Parameter]
    public long Id { get; set; }

    public Product? Product { get; set; }

    protected override void OnParametersSet()
    {
        Product = Repository?.Products.FirstOrDefault(p => p.Id == Id);
    }

    public string EditUrl => $"/admin/products/edit/{Product?.Id}";

    string GetIsUsedInfo(Product? product) => product != null && product.IsUsed ? "Б/У" : "НОВЫЙ";
}