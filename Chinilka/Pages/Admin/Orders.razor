@page "/admin/orders"
@inherits OwningComponentBase<IChinilkaRepository>

<h3>Заказы</h3>
<OrderTable TableTitle="Незавершенные заказы" Orders="UnshippedOrders" ButtonLabel="Отгрузить" OrderSelected="ShipOrder" />
<OrderTable TableTitle="Закрытые заказы" Orders="ShippedOrders" ButtonLabel="Возобновить" OrderSelected="ResetOrder" />

<button class="btn btn-info" @onclick="@(e => UpdateData())">Обновить</button>

@code {
    public IChinilkaRepository Repository => Service;
    public IEnumerable<Order> AllOrders { get; set; } = Enumerable.Empty<Order>();
    public IEnumerable<Order> UnshippedOrders { get; set; } = Enumerable.Empty<Order>();
    public IEnumerable<Order> ShippedOrders { get; set; } = Enumerable.Empty<Order>();

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllOrders = await Repository.Orders.ToListAsync();
        UnshippedOrders = AllOrders.Where(o => !o.Shipped);
        ShippedOrders = AllOrders.Where(o => o.Shipped);
    }

    public void ShipOrder(int id) => UpdateOrder(id, true);

    public void ResetOrder(int id) => UpdateOrder(id, false);

    private async void UpdateOrder(int id, bool shipValue)
    {
        Order? o = Repository.Orders.FirstOrDefault(o => o.Id == id);
        if (o != null)
        {
            o.Shipped = shipValue;
            await Repository.SaveOrder(o);
        }
    }
}